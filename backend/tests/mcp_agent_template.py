#!/usr/bin/env python3
"""
Working MCP Agent - Fixed Version
"""

import os
import sys
import time

def main():
    print("ü§ñ MCP Agent Starting...")
    
    # Read task from stdin or command line
    try:
        if len(sys.argv) > 1:
            task = " ".join(sys.argv[1:])
        else:
            task = sys.stdin.read().strip()
    except Exception as e:
        print(f"‚ùå Error reading task: {e}")
        sys.exit(1)
    
    if not task:
        print("‚ùå No task provided")
        sys.exit(1)
    
    print(f"üìã Task: {task}")
    
    # Create sandbox directory
    sandbox_path = os.path.join(os.getcwd(), "sandbox")
    os.makedirs(sandbox_path, exist_ok=True)
    print(f"üìÅ Sandbox: {sandbox_path}")
    
    # Simulate agent work
    print("üîÑ Processing task...")
    for i in range(3):
        print(f"Step {i+1}: Working...")
        time.sleep(0.8)
    
    # Generate content based on task
    if "banoffee" in task.lower() or "recipe" in task.lower():
        filename = "banoffee.md"
        content = """# Banoffee Pie Recipe

A delicious British dessert combining bananas, toffee, and cream.

## Ingredients
- **Base**: 200g digestive biscuits, 100g butter (melted)
- **Toffee**: 397g can condensed milk
- **Topping**: 3-4 ripe bananas, 300ml double cream, dark chocolate

## Method

### 1. Prepare the Base
- Crush digestive biscuits into fine crumbs
- Mix with melted butter until combined
- Press firmly into 20cm pie dish
- Chill for 30 minutes

### 2. Make the Toffee
- Place unopened condensed milk can in large pot
- Cover completely with boiling water
- Simmer for 2 hours (keep checking water level)
- Cool completely before opening

### 3. Assemble the Pie
- Spread toffee evenly over biscuit base
- Slice bananas and arrange on top
- Whip cream to soft peaks
- Spread cream over bananas
- Grate dark chocolate on top

### 4. Serve
- Chill for at least 2 hours
- Cut with sharp knife for clean slices
- Best served within 24 hours

## Pro Tips
- Use firm bananas to prevent browning
- Make toffee a day ahead for best results
- Add a pinch of sea salt to the toffee for extra flavor
- Dip banana slices in lemon juice to prevent oxidation

*Serves 8-10 people. A true British classic!*
"""
    elif "python" in task.lower():
        filename = "python_guide.md"
        content = """# Python Programming Guide

## What is Python?
Python is a high-level, interpreted programming language known for its simplicity and readability.

## Key Features
- **Easy to Learn**: Simple syntax similar to English
- **Versatile**: Web development, data science, AI, automation
- **Large Community**: Extensive libraries and support
- **Cross-platform**: Works on Windows, Mac, Linux

## Getting Started

### Installation
```bash
# Download from python.org
# Or use package managers:
brew install python3          # macOS
sudo apt install python3      # Ubuntu
```

### Your First Program
```python
print("Hello, World!")
```

### Basic Syntax
```python
# Variables
name = "Alice"
age = 25
is_student = True

# Lists
fruits = ["apple", "banana", "orange"]

# Functions
def greet(name):
    return f"Hello, {name}!"

# Loops
for fruit in fruits:
    print(fruit)
```

## Popular Libraries
- **Web**: Django, Flask, FastAPI
- **Data**: Pandas, NumPy, Matplotlib
- **AI/ML**: TensorFlow, PyTorch, scikit-learn
- **Automation**: Selenium, Requests, BeautifulSoup

## Next Steps
1. Practice with online tutorials
2. Build small projects
3. Join Python communities
4. Contribute to open source

*Happy coding!*
"""
    else:
        filename = "task_output.md"
        content = f"""# Task Completed

## Task Details
**Request**: {task}
**Completed**: {time.strftime('%Y-%m-%d %H:%M:%S')}
**Status**: ‚úÖ Success

## Summary
Your MCP agent has successfully processed the task and generated this output file.

## What Happened
1. Task received and validated
2. Content generated based on request
3. Markdown file created in sandbox
4. Ready for download

## Next Steps
- Check the generated file content
- Download if needed
- Try more complex tasks

*Generated by MCP Web Agent*
"""
    
    # Write the output file
    output_file = os.path.join(sandbox_path, filename)
    
    try:
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(content)
        print(f"‚úÖ Created file: {filename}")
    except Exception as e:
        print(f"‚ùå Error creating file: {e}")
        sys.exit(1)
    
    print("üéâ Agent completed successfully!")
    print(f"Output: Created {filename} with task results")

if __name__ == "__main__":
    main()